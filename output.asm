extern _malloc
section .data
global _main
section .text

_main:
	PUSH RBP
	MOV RBP, RSP
	SUB RSP, 16; 8 alloc, 8 padding
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 3
	POP RCX
	IMUL RAX, RCX
	PUSH RAX
	POP RDI
	CALL _malloc
	PUSH RAX
	POP RCX
	MOV [RAX], RCX; store1
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 3
	POP RCX
	IMUL RAX, RCX
	PUSH RAX
	POP RDI
	CALL _malloc
	PUSH RAX
	LEA RAX, [RBP-8]; load
	PUSH RAX
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 2
	POP RCX
	IMUL RAX, RCX
	POP RCX
	ADD RAX, RCX
	POP RCX
	MOV [RAX], RCX; store1
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 3
	POP RCX
	IMUL RAX, RCX
	PUSH RAX
	POP RDI
	CALL _malloc
	PUSH RAX
	LEA RAX, [RBP-8]; load
	PUSH RAX
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 2
	POP RCX
	IMUL RAX, RCX
	POP RCX
	ADD RAX, RCX
	MOV RAX, [RAX]; deref
	PUSH RAX
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 2
	POP RCX
	IMUL RAX, RCX
	POP RCX
	ADD RAX, RCX
	POP RCX
	MOV [RAX], RCX; store1
	MOV EAX, 2
	PUSH RAX
	LEA RAX, [RBP-8]; load
	PUSH RAX
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 2
	POP RCX
	IMUL RAX, RCX
	POP RCX
	ADD RAX, RCX
	MOV RAX, [RAX]; deref
	PUSH RAX
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 2
	POP RCX
	IMUL RAX, RCX
	POP RCX
	ADD RAX, RCX
	MOV RAX, [RAX]; deref
	PUSH RAX
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 0
	POP RCX
	IMUL RAX, RCX
	POP RCX
	ADD RAX, RCX
	POP RCX
	MOV [RAX], RCX; store1
	MOV EAX, 3
	PUSH RAX
	LEA RAX, [RBP-8]; load
	PUSH RAX
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 2
	POP RCX
	IMUL RAX, RCX
	POP RCX
	ADD RAX, RCX
	MOV RAX, [RAX]; deref
	PUSH RAX
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 2
	POP RCX
	IMUL RAX, RCX
	POP RCX
	ADD RAX, RCX
	MOV RAX, [RAX]; deref
	PUSH RAX
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 1
	POP RCX
	IMUL RAX, RCX
	POP RCX
	ADD RAX, RCX
	POP RCX
	MOV [RAX], RCX; store1
	MOV EAX, 1
	PUSH RAX
	LEA RAX, [RBP-8]; load
	PUSH RAX
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 2
	POP RCX
	IMUL RAX, RCX
	POP RCX
	ADD RAX, RCX
	MOV RAX, [RAX]; deref
	PUSH RAX
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 2
	POP RCX
	IMUL RAX, RCX
	POP RCX
	ADD RAX, RCX
	MOV RAX, [RAX]; deref
	PUSH RAX
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 2
	POP RCX
	IMUL RAX, RCX
	POP RCX
	ADD RAX, RCX
	POP RCX
	MOV [RAX], RCX; store1
	MOV EAX, 3
	PUSH RAX
	LEA RAX, [RBP-8]; load
	PUSH RAX
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 2
	POP RCX
	IMUL RAX, RCX
	POP RCX
	ADD RAX, RCX
	MOV RAX, [RAX]; deref
	PUSH RAX
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 2
	POP RCX
	IMUL RAX, RCX
	POP RCX
	ADD RAX, RCX
	MOV RAX, [RAX]; deref
	PUSH RAX
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 2
	POP RCX
	IMUL RAX, RCX
	POP RCX
	ADD RAX, RCX
	MOV RAX, [RAX]; deref
	PUSH RAX
	LEA RAX, [RBP-8]; load
	PUSH RAX
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 2
	POP RCX
	IMUL RAX, RCX
	POP RCX
	ADD RAX, RCX
	MOV RAX, [RAX]; deref
	PUSH RAX
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 2
	POP RCX
	IMUL RAX, RCX
	POP RCX
	ADD RAX, RCX
	MOV RAX, [RAX]; deref
	PUSH RAX
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 0
	POP RCX
	IMUL RAX, RCX
	POP RCX
	ADD RAX, RCX
	MOV RAX, [RAX]; deref
	POP RCX
	SUB RAX, RCX
	PUSH RAX
	LEA RAX, [RBP-8]; load
	PUSH RAX
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 2
	POP RCX
	IMUL RAX, RCX
	POP RCX
	ADD RAX, RCX
	MOV RAX, [RAX]; deref
	PUSH RAX
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 2
	POP RCX
	IMUL RAX, RCX
	POP RCX
	ADD RAX, RCX
	MOV RAX, [RAX]; deref
	PUSH RAX
	MOV EAX, 4
	PUSH RAX
	MOV EAX, 1
	POP RCX
	IMUL RAX, RCX
	POP RCX
	ADD RAX, RCX
	MOV RAX, [RAX]; deref
	POP RCX
	ADD RAX, RCX
	POP RCX
	SUB RAX, RCX
	ADD RSP, 16
	POP RBP
	RET

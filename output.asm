section .data
global _main
section .text
_main:
	PUSH RBP
	MOV RBP, RSP
	SUB RSP, 16; 8 alloc, 8 padding
.BEGIN:
	MOV RAX, 4
	PUSH RAX
	MOV RAX, 5
	POP RCX
	CMP RCX, RAX
	SETE AL
	CMP RAX, 0
	JE .L0
	MOV RAX, 0
	JMP .L1
.L0:
	MOV RAX, 54
	PUSH RAX
	MOV RAX, 54
	POP RCX
	CMP RCX, RAX
	SETE AL
.L1:
	CMP RAX, 0
	JE .L2
	MOV RAX, 1
	JMP .L3
.L2:
	MOV RAX, 69
.L3:
	PUSH RAX
	PUSH RAX
	MOV RAX, QWORD [RBP-8]; load
	POP RCX
	MOV [RBP-8], RCX; store
	POP RAX
	MOV RAX, 4
	PUSH RAX
	MOV RAX, 5
	POP RCX
	CMP RCX, RAX
	SETE AL
	CMP RAX, 0
	JE .L4
	MOV RAX, 0
	JMP .L5
.L4:
	MOV RAX, 54
	PUSH RAX
	MOV RAX, 54
	POP RCX
	CMP RCX, RAX
	SETE AL
.L5:
	CMP RAX, 0
	JE .L6
	MOV RAX, 1
	JMP .L7
.L6:
	MOV RAX, 69
.L7:
	PUSH RAX
	PUSH RAX
	MOV RAX, QWORD [RBP-8]; load
	POP RCX
	MOV [RBP-8], RCX; store
	POP RAX
.L9:
	JMP .L8
.L8:
	MOV RAX, 4
	PUSH RAX
	MOV RAX, 5
	POP RCX
	CMP RCX, RAX
	SETE AL
	CMP RAX, 0
	JE .L10
	MOV RAX, 0
	JMP .L11
.L10:
	MOV RAX, 54
	PUSH RAX
	MOV RAX, 54
	POP RCX
	CMP RCX, RAX
	SETE AL
.L11:
	CMP RAX, 0
	JE .L12
	MOV RAX, 1
	JMP .L13
.L12:
	MOV RAX, 63
.L13:
	JMP .END
.END:
	ADD RSP, 16; 8 alloc, 8 padding
	LEAVE
	RET

load "includes/cstdio"
load "includes/cstdlib"

def strlen(x u8*) s64 => i = x while *x {++x} x - i

def lex(c u8*) char*
    while cc = *c++
        putchar(cc)

def main(argc s32, argv char**) s32
    if argc < 2
        puts("too few arguments.")
        return 0
    source_file = argv[1]
    printf("printing: %s\n", source_file)
    content = get_file_content(source_file)
    defer { free(content) }

    if !content { printf("Failed to get content of file '%s'\n", source_file) }
    lex(content)
    return 1

# Reads an entire file into a zero-terminated C-style string
def get_file_content(filename u8*) u8*
    buffer u8* = 0
    if handler = fopen(filename, "r")
        fseek(handler, 0, 2)
        string_size = cast(1LL) ftell(handler)
        rewind(handler)
        buffer = malloc(string_size + 1)
        read_size = fread(buffer, 1, string_size, handler)
        buffer[string_size] = '\0'
        if string_size != read_size
            free(buffer)
            buffer = 0
        fclose(handler)
    return buffer

def write_to_file(filename char*, buffer char*)
    if f = fopen(filename, "w")
        fputs(buffer, f)
        fclose(f)
    else 
        puts("Error opening file!")
        exit(1)


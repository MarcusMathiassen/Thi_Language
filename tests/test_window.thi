load "includes/cstdio"
load "includes/cstdlib"
load "includes/opengl"
load "includes/glew"
load "includes/glfw"
load "includes/cmath"

WINDOW_TITLE = "Hello Triangle"

def main() s64
    if !glfwInit() { puts("GLFW init failed.") }
    defer { glfwTerminate() }
    defer { puts("Closing..") }

    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 2)
    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 1)

    glfwWindowHint(GLFW_SAMPLES, 4)
    glfwWindowHint(GLFW_RED_BITS, 8)
    glfwWindowHint(GLFW_GREEN_BITS, 8)
    glfwWindowHint(GLFW_BLUE_BITS, 8)
    glfwWindowHint(GLFW_ALPHA_BITS, 8)

    window = glfwCreateWindow(640, 480, WINDOW_TITLE, NULL, NULL)
    glfwMakeContextCurrent(window)

    if glewInit() != GLEW_OK { puts("GLEW init failed.") }

    shorten_filenames_in_error_messages = false
    warnings_is_errors = false

    running = true

    r = 0.01f
    g = 0.01f
    b = 0.01f
    a = 1.0f

    x = 1.0f
    y = 1.0f
    scale = 1.0f

    while running


        glClearColor(r, g, b, a)
        if glfwWindowShouldClose(window) { running = false }
        if glfwGetKey(window, GLFW_KEY_ESCAPE) == GLFW_PRESS { running = false }

        glClear(GL_COLOR_BUFFER_BIT)
        glfwPollEvents()

        if glfwGetKey(window, GLFW_KEY_UP) == GLFW_PRESS { 
            y += 0.01f
        }

        if glfwGetKey(window, GLFW_KEY_DOWN) == GLFW_PRESS { 
            y -= 0.01f
        }

        if glfwGetKey(window, GLFW_KEY_RIGHT) == GLFW_PRESS { 
            x += 0.01f
        }

        if glfwGetKey(window, GLFW_KEY_LEFT) == GLFW_PRESS { 
            x -= 0.01f
        }

        if glfwGetKey(window, GLFW_KEY_Z) == GLFW_PRESS { 
            scale -= 0.01f
        }
        if glfwGetKey(window, GLFW_KEY_Q) == GLFW_PRESS { 
            scale += 0.01f
        }

        #printf("rgb(%f, %f, %f, %f)\n", r, g, b, a))

        drawTriangle(x * 0.01f, y * 0.01f, scale)

        glfwSwapBuffers(window)

    # There is a big at the moment with defer.
    # It's running after the 'return' statement.
    #
    # Overwriting 'RAX' so we just get what ever
    #  is in 'RAX' when all defers have run.
    return 1

def drawTriangle(x f64, y f64, s f64)
    glBegin(GL_TRIANGLES)
    glColor3f(1.0f, 0.0f, 0.0f)
    glVertex2f(x + -0.5f *s, y + -0.5f*s )
    glColor3f(0.0f, 1.0f, 0.0f)
    glVertex2f(x + 0.0f*s, y + 0.5f*s)
    glColor3f(0.0f, 0.0f, 1.0f)
    glVertex2f(x + 0.5f*s, y -0.5f*s)
    glEnd()

load "includes/cstdio"
load "includes/opengl"
load "includes/glew"
load "includes/glfw"
load "includes/cmath"

main()
    if !glfwInit() puts("GLFW init failed.")
    defer glfwTerminate()

    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 2)
    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 1)
  
    glfwWindowHint(GLFW_SAMPLES, 4)
    glfwWindowHint(GLFW_RED_BITS, 8)
    glfwWindowHint(GLFW_GREEN_BITS, 8)
    glfwWindowHint(GLFW_BLUE_BITS, 8)
    glfwWindowHint(GLFW_ALPHA_BITS, 8)

    window := glfwCreateWindow(640, 480, "Hello Triangle", 0, 0)
    glfwMakeContextCurrent(window)

    if glfwInit() != GLEW_OK puts("GLEW init failed.")

    glClearColor(0.01, 0.01, 0.01, 1.0)

    glEnable(GL_FRAMEBUFFER_SRGB)

    x := 0.0
    y := 0.0
    scale := 1.0

    running := true
    
    while running

        if glfwWindowShouldClose(window)  running = false
        if glfwGetKey(window, GLFW_KEY_ESCAPE) == GLFW_PRESS  running = false

        glClear(GL_COLOR_BUFFER_BIT)
        glfwPollEvents()

        key := glfwGetKey(window, GLFW_KEY_LEFT)

        # This is a switch
        if key
            is GLFW_PRESS x += -0.001 

        if glfwGetKey(window, GLFW_KEY_RIGHT) == GLFW_PRESS  x +=  0.001 
        if glfwGetKey(window, GLFW_KEY_DOWN) == GLFW_PRESS   y += -0.001 
        if glfwGetKey(window, GLFW_KEY_UP) == GLFW_PRESS     y +=  0.001 

        if glfwGetKey(window, GLFW_KEY_X) == GLFW_PRESS     scale +=  0.001 
        if glfwGetKey(window, GLFW_KEY_Z) == GLFW_PRESS     scale +=  -0.001 

        draw_triangle(x, y, scale)

        glfwSwapBuffers(window)

    return 1

draw_triangle(x: f32, y: f32, s: f32)
    glBegin(GL_TRIANGLES)
    glColor3f(1.0, 0.0, 0.0)
    glVertex2f(x + -0.5 *s, y + -0.5*s )
    glColor3f(0.0, 1.0, 0.0)
    glVertex2f(x + 0.0*s, y + 0.5*s)
    glColor3f(0.0, 0.0, 1.0)
    glVertex2f(x + 0.5*s, y -0.5*s)
    glEnd()

load "includes/cstdio.thi"
load "includes/opengl.thi"
load "includes/glew.thi"
load "includes/glfw.thi"
load "includes/math.thi"

def main () -> s32

    if !glfwInit() do puts("GLFW init failed.")
    defer do glfwTerminate()

    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 2)
    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 1)
  
    glfwWindowHint(GLFW_SAMPLES, 4)
    glfwWindowHint(GLFW_RED_BITS, 8)
    glfwWindowHint(GLFW_GREEN_BITS, 8)
    glfwWindowHint(GLFW_BLUE_BITS, 8)
    glfwWindowHint(GLFW_ALPHA_BITS, 8)

    window := glfwCreateWindow(512, 512, "Hello Triangle", 0, 0)
    glfwMakeContextCurrent(window)

    if glfwInit() != GLEW_OK do puts("GLEW init failed.")

    glClearColor(0.01, 0.01, 0.01, 1.0)

    glEnable(GL_FRAMEBUFFER_SRGB)

    x := 0.0
    y := 0.0
    scale := 1.0

    running := true

    while running

        if glfwWindowShouldClose(window) 
            running = false
        
        if glfwGetKey(window, GLFW_KEY_ESCAPE) == GLFW_PRESS 
            running = false

        glClear(GL_COLOR_BUFFER_BIT)
        glfwPollEvents()

        if glfwGetKey(window, GLFW_KEY_LEFT) == GLFW_PRESS  do x += -0.001 
        if glfwGetKey(window, GLFW_KEY_RIGHT) == GLFW_PRESS do x +=  0.001 
        if glfwGetKey(window, GLFW_KEY_DOWN) == GLFW_PRESS  do y += -0.001 
        if glfwGetKey(window, GLFW_KEY_UP) == GLFW_PRESS    do y +=  0.001 

        if glfwGetKey(window, GLFW_KEY_X) == GLFW_PRESS    do scale +=  0.001 
        if glfwGetKey(window, GLFW_KEY_Z) == GLFW_PRESS    do scale +=  -0.001 


        draw_triangle(x, y, scale)

        # glBegin(GL_TRIANGLES)
        # glColor3f(1.0, 0.0, 0.0)
        # glVertex2f(x + -0.5 * scale, y + -0.5 * scale)
        # glColor3f(0.0, 1.0, 0.0)
        # glVertex2f(x + 0.0* scale, y + 0.5* scale)
        # glColor3f(0.0, 0.0, 1.0)
        # glVertex2f(x + 0.5* scale, y -0.5* scale)
        # glEnd()

        glfwSwapBuffers(window)

    return 1

def draw_triangle(x: f32, y: f32, s: f32)
        glBegin(GL_TRIANGLES)
        glColor3f(1.0, 0.0, 0.0)
        glVertex2f(x + -0.5 *s, y + -0.5*s )
        glColor3f(0.0, 1.0, 0.0)
        glVertex2f(x + 0.0*s, y + 0.5*s)
        glColor3f(0.0, 0.0, 1.0)
        glVertex2f(x + 0.5*s, y -0.5*s)
        glEnd()

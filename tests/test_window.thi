load "includes/cstdio"
load "includes/cstdlib"
load "includes/opengl"
load "includes/glew"
load "includes/glfw"
load "includes/cmath"

def main() int

    WINDOW_TITLE = "Hello Triangle"

    if !glfwInit() { puts("GLFW init failed.") }
    defer { glfwTerminate() }
    defer { puts("Closing..") }

    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 2)
    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 1)

    window = glfwCreateWindow(640, 480, WINDOW_TITLE, NULL, NULL)
    glfwMakeContextCurrent(window)

    if glewInit() != cast(1L)GLEW_OK { puts("GLEW init failed.") }

    running = true

    r = 0.01f
    g = 0.01f
    b = 0.01f
    a = 1.0f

    x = 1.0f
    y = 1.0f
    scale = 1.0f

    while running

        if glfwGetKey(window, GLFW_KEY_R) == cast(1L)GLFW_PRESS { r += 0.001f }
        if glfwGetKey(window, GLFW_KEY_G) == cast(1L)GLFW_PRESS { g += 0.001f }
        if glfwGetKey(window, GLFW_KEY_B) == cast(1L)GLFW_PRESS { b += 0.001f }
        if glfwGetKey(window, GLFW_KEY_E) == cast(1L)GLFW_PRESS { r -= 0.001f }
        if glfwGetKey(window, GLFW_KEY_F) == cast(1L)GLFW_PRESS { g -= 0.001f }
        if glfwGetKey(window, GLFW_KEY_V) == cast(1L)GLFW_PRESS { b -= 0.001f }

        r = clamp(r, 0.0f, 1.0f)
        g = clamp(g, 0.0f, 1.0f)
        b = clamp(b, 0.0f, 1.0f)
        a = clamp(a, 0.0f, 1.0f)

        glClearColor(r, g, b, a)

        #printf("rgb(%f, %f, %f, %f)\n", cast(1.0)r, cast(1.0)g, cast(1.0)b, cast(1.0)a)

        if glfwWindowShouldClose(window) { running = false }
        if glfwGetKey(window, GLFW_KEY_ESCAPE) == cast(1L)GLFW_PRESS { running = false }

        glClear(GL_COLOR_BUFFER_BIT)
        glfwPollEvents()

        if glfwGetKey(window, GLFW_KEY_UP) == cast(1L)GLFW_PRESS { y += 0.1f }
        if glfwGetKey(window, GLFW_KEY_DOWN) == cast(1L)GLFW_PRESS { y -= 0.1f }
        if glfwGetKey(window, GLFW_KEY_RIGHT) == cast(1L)GLFW_PRESS { x += 0.1f }
        if glfwGetKey(window, GLFW_KEY_LEFT) == cast(1L)GLFW_PRESS { x -= 0.1f }
        if glfwGetKey(window, GLFW_KEY_Z) == cast(1L)GLFW_PRESS { scale -= 0.01f }
        if glfwGetKey(window, GLFW_KEY_Q) == cast(1L)GLFW_PRESS { scale += 0.01f }

        drawTriangle(x * 0.01f, y * 0.01f, scale)

        glfwSwapBuffers(window)

    return 1

def drawTriangle(x f32, y f32, s f32)
    glBegin(GL_TRIANGLES)
    glColor3f(1.0f, 0.0f, 0.0f)
    glVertex2f(x + -0.5f *s, y + -0.5f*s )
    glColor3f(0.0f, 1.0f, 0.0f)
    glVertex2f(x + 0.0f*s, y + 0.5f*s)
    glColor3f(0.0f, 0.0f, 1.0f)
    glVertex2f(x + 0.5f*s, y -0.5f*s)
    glEnd()

def clamp(x f32, mi f32, ma f32) f32
    x = x < mi ? mi : x
    x = x > ma ? ma : x
    return x

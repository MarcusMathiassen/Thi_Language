load "includes/cstdio"
load "includes/cstdlib"
load "includes/opengl"
load "includes/glew"
load "includes/glfw"
load "includes/cmath"

DEFAULT_WINDOW_TITLE :: "Hello Triangle"

enum Mode
    light :: 0
    dark :: 1

main()
    if !glfwInit() puts("GLFW init failed.")
    defer glfwTerminate()
    defer puts("Closing..")

    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 2)
    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 1)

    glfwWindowHint(GLFW_SAMPLES, 4)
    glfwWindowHint(GLFW_RED_BITS, 8)
    glfwWindowHint(GLFW_GREEN_BITS, 8)
    glfwWindowHint(GLFW_BLUE_BITS, 8)
    glfwWindowHint(GLFW_ALPHA_BITS, 8)

    window := glfwCreateWindow(640, 480, DEFAULT_WINDOW_TITLE, NULL, NULL)
    glfwMakeContextCurrent(window)

    if glfwInit() != GLEW_OK puts("GLEW init failed.")

    shorten_filenames_in_error_messages : bool = false
    warnings_is_errors := false

    x := 0.0
    y := 0.0
    scale := 1.0

    running := true


    #mode := Mode.dark

    while running

        r := 1.0
        g := 0.0
        b := 1.0

        #if glfwGetKey(window, GLFW_KEY_M) is GLFW_PRESS mode = (mode == Mode.light ? Mode.dark : Mode.light)

        #if mode
        #    is Mode.dark
        #        r = 0.0
        #        g = 0.0
        #        b = 0.0
        #    is Mode.light
        #        r = 1.0
        #        g = 1.0
        #        b = 1.0

        glClearColor(r, g, b, 1.0)

        if glfwWindowShouldClose(window) running = false
        if glfwGetKey(window, GLFW_KEY_ESCAPE) is GLFW_PRESS  running = false

        glClear(GL_COLOR_BUFFER_BIT)
        glfwPollEvents()

        key := glfwGetKey(window, GLFW_KEY_LEFT)

        # This is a switch, kinda..
        if key is GLFW_PRESS x += -0.01

        if glfwGetKey(window, GLFW_KEY_RIGHT) is GLFW_PRESS x +=  0.01
        if glfwGetKey(window, GLFW_KEY_DOWN) is GLFW_PRESS y += -0.01
        if glfwGetKey(window, GLFW_KEY_UP) is GLFW_PRESS y +=  0.01

        if glfwGetKey(window, GLFW_KEY_X) is GLFW_PRESS scale +=  0.01
        if glfwGetKey(window, GLFW_KEY_Z) is GLFW_PRESS scale +=  -0.01

        w: int
        h: int
        #glfwGetFramebufferSize(window, &w, &h)
        #printf("framebuffer size: %dx%d\n", w, h)

        drawTriangle(x * 0.01, y * 0.01, scale)

        glfwSwapBuffers(window)

    # There is a big at the moment with defer.
    # It's running after the 'return' statement.
    #
    # Overwriting 'RAX' so we just get what ever
    #  is in 'RAX' when all defers have run.
    return 1

drawTriangle(x: f32, y: f32, s: f32)
    glBegin(GL_TRIANGLES)
    defer glEnd()
    glColor3f(1.0, 0.0, 0.0)
    glVertex2f(x + -0.5 *s, y + -0.5*s )
    glColor3f(0.0, 1.0, 0.0)
    glVertex2f(x + 0.0*s, y + 0.5*s)
    glColor3f(0.0, 0.0, 1.0)
    glVertex2f(x + 0.5*s, y -0.5*s)

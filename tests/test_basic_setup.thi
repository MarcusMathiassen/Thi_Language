#change:                                 # @change
#        mov     QWORD PTR [RSP - 8], RDI
#        mov     RDI, QWORD PTR [RSP - 8]
#        mov     DWORD PTR [RDI], 53
#        ret

#main:                                   # @main
#        push    RBP
#        mov     RBP, RSP
#        sub     RSP, 32
#        lea     RAX, QWORD PTR [RBP - 20]
#        mov     DWORD PTR [RBP - 4], 0
#        mov     DWORD PTR [RBP - 8], EDI
#        mov     QWORD PTR [RBP - 16], RSI
#        mov     DWORD PTR [RBP - 20], 0
#        mov     QWORD PTR [RBP - 32], RAX
#        mov     RDI, QWORD PTR [RBP - 32]
#        call    change
#        mov     ECX, DWORD PTR [RBP - 20]
#        add     ECX, 3
#        mov     EAX, ECX
#        add     RSP, 32
#        pop     RBP
#        ret

# load "includes/cstdio"

extern printf(u8*, ...) s32

def change(x s64*) void
    *x = 53

def v2
    x f64
    y f64

def main(argc int, argv char**) s64
    #i = 1
    #k = &i
    #*k = 42

    ## Print all arguments
    #for x = 0 x < argc ++x
    #    printf("%s\n", argv[x])


    # The bug is that 'v.x' type is seen as 'v2' when it should be 'f64'
    # Check the assembly.

    v v2
    v.x = 53.35
    f = 3.0
    #*(&v + 0) = 14.01
    printf("%f\n", v.x)

    #x = 5.0
    #f = 3.0
    #printf("%f %f\n", f, x)

    #change(k)
    #return i
    return 1
